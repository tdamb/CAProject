name: Build, Push and Deploy Docker images to ECR and ECS

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main # Trigger on PRs to the main branch

permissions:
  contents: read
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set the Date-Time Tag
        id: datetime
        run: echo "DATETIME=$(date '+prod-%Y-%m-%d-%H-%M')" >> $GITHUB_ENV

      - name: Build and push Frontend Docker image
        run: |
          ECR_REGISTRY=$(echo "${{ steps.login-ecr.outputs.registry }}" | sed 's|/$||')
          FRONTEND_IMAGE_TAG=$ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:${{ env.DATETIME }}
          docker build -t $FRONTEND_IMAGE_TAG ./frontend/create-react-app
          docker push $FRONTEND_IMAGE_TAG

      - name: Build and push Backend Docker image
        run: |
          ECR_REGISTRY=$(echo "${{ steps.login-ecr.outputs.registry }}" | sed 's|/$||')
          BACKEND_IMAGE_TAG=$ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:${{ env.DATETIME }}
          docker build -t $BACKEND_IMAGE_TAG ./backend
          docker push $BACKEND_IMAGE_TAG
